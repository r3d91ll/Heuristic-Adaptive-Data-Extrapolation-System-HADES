# HADES Environment Variables - EXAMPLE FILE
# Copy this file to .env and fill in your actual credentials

# PostgreSQL Configuration
HADES_MCP__AUTH__DB_TYPE=postgresql
HADES_PG_HOST=localhost
HADES_PG_PORT=5432
HADES_PG_USER=hades
HADES_PG_PASSWORD=nrhwc9EJsgN=rHg_
HADES_PG_DATABASE=hades_auth

# ArangoDB Configuration
HADES_ARANGO_URL=http://localhost:8529
HADES_ARANGO_HOST=localhost
HADES_ARANGO_PORT=8529
HADES_ARANGO_USER=hades
HADES_ARANGO_PASSWORD=LVlX5fshvf0H24cWQNHjm41S
HADES_ARANGO_DATABASE=hades_graph

# API Keys for authentication
HADES_SERVICE_API_KEY=53334988c22e0c4272faad71448415eda0b13e58ce2ed7a8cee64057f2ec696d
HADES_ADMIN_API_KEY=a19ddaf52c3ef0fc1c6dfeeaf8778d6395ee538d784321199d82ced335dd3bfc

# Test environment settings
HADES_ENV=development  # Options: development, testing, production
ENABLE_AUTH=true       # Set to false to disable authentication for development

# PostgreSQL Test Database (for testing only)
HADES_TEST_DB_NAME=hades_test
HADES_TEST_DB_USER=hades
HADES_TEST_DB_PASSWORD=LVlX5fshvf0H24cWQNHjm41S
HADES_TEST_DB_HOST=localhost
HADES_TEST_DB_PORT=5432
