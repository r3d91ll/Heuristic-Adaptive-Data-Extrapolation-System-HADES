# HADES Environment Variables - EXAMPLE FILE
# Copy this file to .env and fill in your actual credentials

# PostgreSQL Configuration
HADES_MCP__AUTH__DB_TYPE=postgresql
HADES_PG_HOST=localhost
HADES_PG_PORT=5432
HADES_PG_USER=hades
HADES_PG_PASSWORD=o$n^3W%QD0HGWxH!
HADES_PG_DATABASE=hades_auth

# ArangoDB Configuration
HADES_ARANGO_HOST=localhost
HADES_ARANGO_PORT=8529
HADES_ARANGO_USER=hades
HADES_ARANGO_PASSWORD=o$n^3W%QD0HGWxH!
HADES_ARANGO_DATABASE=hades_graph

# API Keys for authentication
HADES_SERVICE_API_KEY=ef3d6421eee83c5856f3270505bd92704844b02fd3997eda987edf6dbf038bc1
HADES_ADMIN_API_KEY=b49e647dfedb8b94e0122355703753c174326251237507cd99d446530eabbf9e

# Test environment settings
HADES_ENV=development  # Options: development, testing, production
ENABLE_AUTH=true       # Set to false to disable authentication for development

# PostgreSQL Test Database (for testing only)
HADES_TEST_DB_NAME=hades_test
HADES_TEST_DB_USER=hades
HADES_TEST_DB_PASSWORD=your_secure_password_here
HADES_TEST_DB_HOST=localhost
HADES_TEST_DB_PORT=5432
